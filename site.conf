-- This is an example site configuration for Gluon v2017.1+
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration will not work as is. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'ffeu-',

  -- Name of the community.
  site_name = 'Freifunk Euskirchen',

  -- Shorthand of the community.
  site_code = 'ffeu',

  -- 32 bytes of random data, encoded in hexacimal
  -- Must be the same of all nodes in one mesh domain
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  domain_seed = 'dd8da9518456afb40b60517459187e07d2072353663742a62b48423b1be48e47',

  -- Prefixes used within the mesh.
  -- prefix6 is required, prefix4 can be omitted if next_node.ip4
  -- is not set.
  prefix4 = '10.19.0.0/16',
  prefix6 = 'fda0:747e:ab29:e054::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {
    '2.pool.ntp.org',
    '0.openwrt.pool.ntp.org',
    '1.openwrt.pool.ntp.org',
    '2.openwrt.pool.ntp.org',
    '3.openwrt.pool.ntp.org',
  },

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 6,

    -- ESSID used for client network.
    ap = {
      ssid = 'Freifunk',
      -- disabled = true, (optional)
    },

    mesh = {
      -- Adjust these values!
      id = 'ffeu-fAe3rifuk', -- usually you don't want users to connect to this mesh-SSID, so use a cryptic id that no one will accidentally mistake for the client WiFi
      mcast_rate = 12000,
       --disabled = true, (optional)
    }

    --ibss = {
      --ssid = 'FFEU-BATBONE',
      --bssid = '02:ca:ff:ee:e0:54',
      --mcast_rate = 12000,
    --}
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    ap = {
      ssid = 'Freifunk',
    },
    mesh = {
       --Adjust these values!
      id = 'ffeu-fAe3rifuk',
      mcast_rate = 12000,
    }
    --ibss = {
      --ssid = 'FFEU-BATBONE',
      --bssid = '02:ca:ff:ee:e0:54',
      --mcast_rate = 12000,
    --}
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.19.0.1',
    ip6 = 'fda0:747e:ab29:e054::1',
  },

  -- Options specific to routing protocols (optional)
   mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
     batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
       gw_sel_class = 3,
       routing_algo = 'BATMAN_IV',
     },
      vxlan = true,
   },

  mesh_vpn = {
    enabled = true,

    fastd = {
      -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
      -- what these options do.

      -- List of crypto-methods to use.
      methods = {'null@l2tp'},
      configurable = false,
      -- syslog_level = 'warn',
      mtu = 1406,

      groups = {
        backbone = {
          -- Limit number of connected peers to reduce bandwidth.
          limit = 1,

          -- List of peers.
          peers = {
            ffeu1 = {
              key = 'b6fe0d7e1a4f31c46893ebdb8be9442e4576743345d1e5ce7a403da3e550053d',
              remotes = {'"gw01.l2tp.ffeu.de" port 53879'},
            },
            ffeu2 = {
              key = 'c2b1c5f4f23329fc62b96db9a4728ef6a8cd36ec6ef4ab218d09d031dd4d747b',
              remotes = {'"gw02.l2tp.ffeu.de" port 53879'},
            },
            ffeu3 = {
              key = 'fe39fe357ec9573837f4cfc678f29f4910655a7a697efc9fb6ea3530f2b03358',
              remotes = {'"gw03.l2tp.ffeu.de" port 53879'},
            },
            ffeu4 = {
              key = '82e8b0350662cafb690daeafca5417a11edd9a12d2a8f23e080a28973607b92d',
              remotes = {'"gw04.l2tp.ffeu.de" port 53879'},
            },
            ffeu5 = {
              key = '55f7541b6fdd416838f98e9a4786c36daade3e59b547b8c47f9a406f189a98b0',
              remotes = {'"gw05.l2tp.ffeu.de" port 53879'},
            },
            ffeu6 = {
              key = 'f0c8e4e8b03a8a5c43d522c8f927c80795ee14c32bf8cf2b88293dbbb7a6834c',
              remotes = {'"gw06.l2tp.ffeu.de" port 53879'},
            },
            ffeu7 = {
              key = '4ececd3b00139e5db988db22c5b8496b9c80eed6e23c7605e2494f50615228cd',
              remotes = {'"gw07.l2tp.ffeu.de" port 53879'},
            },
            ffeu8 = {
              key = '08a2e5f7271af0e13504e21f0306d80fa80e81d93da85105583ec5ede8490662',
              remotes = {'"gw08.l2tp.ffeu.de" port 53879'},
            },
            ffeu9 = {
              key = '403b3b4dc9fafee1ccbdf2a27c15e4a20a1a608aad3356e11dacedf23b6ea831',
              remotes = {'"gw09.l2tp.ffeu.de" port 53879'},
            },
            ffeu10 = {
              key = '0a1103cdcc72c5dd9b1a131aaae703bfd90260a83a984f0c013a1ec73a0f3726',
              remotes = {'"gw10.l2tp.ffeu.de" port 53879'},
            },
          },

          -- Optional: nested peer groups
          -- groups = {
          --   backbone_sub = {
          --     ...
          --   },
          --   ...
          -- },
        },
        -- Optional: additional peer groups, possibly with other limits
        -- backbone2 = {
        --   ...
        -- },
      },
    },

    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 500,

      -- Default download limit (kbit/s).
      ingress = 5000,
    },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'beta',

    -- List of branches. You may define multiple branches.
    branches = {

      -- stable channel
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://autoupdate.ffeu.de/euskirchen/stable-v2/sysupgrade'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
          '76a44fbb724444ecddc2f683b9e53e061f612a6bfad956b2217c7fc0a82f2df5', -- K3V1N
          '6bfcdfbabcdd35f8e3c7f55dfc13a794ed7b839f2daa9b6371810a72223855d3', -- ARWED
          'ff5159fa7ea80070150f21dfc9d7048d77732c4c2143b6131b6cefff70c13a28', -- Simon
          'da4c40933bcf6065dfc7f5b9cf2db1bc3a3294b146c736609b370dc32fe29066'  -- Dieter
        }
      },

      -- beta channel
      beta = {
        name = 'beta',

        -- List of mirrors to fetch images from. IPVv6 required!
        mirrors = {'http://autoupdate.ffeu.de/euskirchen/beta-v2/sysupgrade'},

        -- Number of good signatures required.
        good_signatures = 1,

        -- List of public keys of maintainers
        pubkeys = {
          '76a44fbb724444ecddc2f683b9e53e061f612a6bfad956b2217c7fc0a82f2df5', -- K3V1N
          '6bfcdfbabcdd35f8e3c7f55dfc13a794ed7b839f2daa9b6371810a72223855d3', -- ARWED
          'ff5159fa7ea80070150f21dfc9d7048d77732c4c2143b6131b6cefff70c13a28', -- Simon
          'da4c40933bcf6065dfc7f5b9cf2db1bc3a3294b146c736609b370dc32fe29066'  -- Dieter
        }
      },

      -- experimental channel
      experimental = {
        name = 'experimental',

        -- List of mirrors to fetch images from. IPVv6 required!
        mirrors = {'http://autoupdate.ffeu.de/euskirchen/experimental-v2/sysupgrade'},

        -- Number of good signatures required.
        good_signatures = 1,

        -- List of public keys of maintainers
        pubkeys = {
          '76a44fbb724444ecddc2f683b9e53e061f612a6bfad956b2217c7fc0a82f2df5', -- K3V1N
          '6bfcdfbabcdd35f8e3c7f55dfc13a794ed7b839f2daa9b6371810a72223855d3', -- ARWED
          'ff5159fa7ea80070150f21dfc9d7048d77732c4c2143b6131b6cefff70c13a28', -- Simon
          'da4c40933bcf6065dfc7f5b9cf2db1bc3a3294b146c736609b370dc32fe29066'  -- Dieter
        }
      }
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },

  -- config_mode = {
    -- Show/hide the altitude field
    -- geo_location = {
      -- show_altitude = false,
    -- },
    -- define if the contact field is obligatory (optional)
    -- owner = {
      -- obligatory = true
    -- },
  -- },

    geo_location = {
      osm = {
        center = {
          lat = 50.581492622,
          lon = 6.701660156,
        },
        zoom = 13,
      },
    },

}
